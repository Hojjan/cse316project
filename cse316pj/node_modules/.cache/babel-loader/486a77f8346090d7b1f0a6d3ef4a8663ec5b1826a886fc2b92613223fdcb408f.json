{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hocha\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\jokbo\\\\CSE 316\\\\assignment\\\\assignment4\\\\assignment4\\\\src\\\\jsxPages\\\\profileContext.jsx\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ProfileContext = /*#__PURE__*/createContext();\nexport const ProfileProvider = ({\n  children\n}) => {\n  _s();\n  const [profileImage, setProfileImage] = useState(\"./user.png\");\n  const [loading, setLoading] = useState(true);\n  const refreshAccessToken = async () => {\n    const refreshToken = localStorage.getItem(\"refreshToken\");\n    try {\n      const response = await fetch(\"http://localhost:3001/api/token/refresh\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          token: refreshToken\n        })\n      });\n      if (!response.ok) {\n        throw new Error(\"Failed to refresh token\");\n      }\n      const data = await response.json();\n      const {\n        accessToken\n      } = data;\n      localStorage.setItem(\"accessToken\", accessToken);\n      console.log(\"Access token refreshed successfully:\", accessToken);\n      return accessToken;\n    } catch (error) {\n      console.error(\"Error refreshing access token:\", error);\n      alert(\"Session expired. Please log in again.\");\n      localStorage.removeItem(\"accessToken\");\n      localStorage.removeItem(\"refreshToken\");\n      window.location.href = \"/login\";\n      return null;\n    }\n  };\n  useEffect(() => {\n    const userId = localStorage.getItem(\"userId\");\n    const accessToken = localStorage.getItem(\"accessToken\");\n    if (userId && accessToken) {\n      fetch(`http://localhost:3001/api/user/profile?userId=${userId}`, {\n        headers: {\n          Authorization: `Bearer ${accessToken}` // Access Token 추가\n        }\n      }).then(response => response.json()).then(data => {\n        if (data.img_src && data.img_src !== \"\") {\n          setProfileImage(data.img_src); // 서버에서 불러온 값으로 초기화\n        }\n      }).catch(error => {\n        console.error(\"Error fetching profile image:\", error);\n        if (error.message.includes(\"403\")) {\n          alert(\"Session expired. Please log in again.\");\n          localStorage.removeItem(\"accessToken\");\n          localStorage.removeItem(\"refreshToken\");\n          window.location.href = \"/login\";\n        }\n      }).finally(() => setLoading(false)); // 로딩 완료\n    } else {\n      setLoading(false); // 유저 ID가 없을 경우 로딩 완료\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(ProfileContext.Provider, {\n    value: {\n      profileImage,\n      setProfileImage,\n      loading\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n};\n_s(ProfileProvider, \"8PK2y9KW1EREk6FfQuQX+g1GrLg=\");\n_c = ProfileProvider;\nvar _c;\n$RefreshReg$(_c, \"ProfileProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","jsxDEV","_jsxDEV","ProfileContext","ProfileProvider","children","_s","profileImage","setProfileImage","loading","setLoading","refreshAccessToken","refreshToken","localStorage","getItem","response","fetch","method","headers","body","JSON","stringify","token","ok","Error","data","json","accessToken","setItem","console","log","error","alert","removeItem","window","location","href","userId","Authorization","then","img_src","catch","message","includes","finally","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/hocha/OneDrive/바탕 화면/jokbo/CSE 316/assignment/assignment4/assignment4/src/jsxPages/profileContext.jsx"],"sourcesContent":["import React, { createContext, useState, useEffect } from \"react\";\r\n\r\nexport const ProfileContext = createContext();\r\n\r\nexport const ProfileProvider = ({ children }) => {\r\n    const [profileImage, setProfileImage] = useState(\"./user.png\");\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    const refreshAccessToken = async () => {\r\n        const refreshToken = localStorage.getItem(\"refreshToken\");\r\n        try {\r\n            const response = await fetch(\"http://localhost:3001/api/token/refresh\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify({ token: refreshToken }),\r\n            });\r\n\r\n            if (!response.ok) {\r\n                throw new Error(\"Failed to refresh token\");\r\n            }\r\n\r\n            const data = await response.json();\r\n            const { accessToken } = data;\r\n\r\n            localStorage.setItem(\"accessToken\", accessToken);\r\n            console.log(\"Access token refreshed successfully:\", accessToken);\r\n            return accessToken;\r\n        } catch (error) {\r\n            console.error(\"Error refreshing access token:\", error);\r\n            alert(\"Session expired. Please log in again.\");\r\n            localStorage.removeItem(\"accessToken\");\r\n            localStorage.removeItem(\"refreshToken\");\r\n            window.location.href = \"/login\";\r\n            return null;\r\n        }\r\n    };\r\n    \r\n    useEffect(() => {\r\n        const userId = localStorage.getItem(\"userId\");\r\n        const accessToken = localStorage.getItem(\"accessToken\");\r\n        if (userId && accessToken) {\r\n            fetch(`http://localhost:3001/api/user/profile?userId=${userId}`, {\r\n                headers: {\r\n                    Authorization: `Bearer ${accessToken}`, // Access Token 추가\r\n                }\r\n                })\r\n                .then((response) => response.json())\r\n                .then((data) => {\r\n                    if (data.img_src && data.img_src !== \"\") {\r\n                        setProfileImage(data.img_src); // 서버에서 불러온 값으로 초기화\r\n                    }\r\n                })\r\n                .catch((error) => {\r\n                    console.error(\"Error fetching profile image:\", error)\r\n                    if (error.message.includes(\"403\")) {\r\n                        alert(\"Session expired. Please log in again.\");\r\n                        localStorage.removeItem(\"accessToken\");\r\n                        localStorage.removeItem(\"refreshToken\");\r\n                        window.location.href = \"/login\";\r\n                    }\r\n                })\r\n                .finally(() => setLoading(false)); // 로딩 완료\r\n        } else {\r\n            setLoading(false); // 유저 ID가 없을 경우 로딩 완료\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <ProfileContext.Provider value={{ profileImage, setProfileImage, loading }}>\r\n            {children}\r\n        </ProfileContext.Provider>\r\n    );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}